<html>
<head>
<title>Stalker</title>
<style>
* {
background-color: black;
color: white;
}
table {
	border: 1px outset grey;
}
td { 
	border: thin inset grey;
	margin: 1;
}
.nr {
	text-align: right;
}
</style>
<script>
const quests = {
  system : {
    fullname: 'config/system.ltx',
	settings: {
	   max_weight: 80,
	   max_belt: 80,
	   max_ruck: 56,
	   slots: 11 
	}
  },
  actor: {
	fullname: 'config/creatures/actor.ltx',
	settings: {
	  max_item_mass: 80,
      max_walk_weight: 80,
	  jump_speed: 1
	}
  }
}
function readAllLtxSections(fileName = 'config/misc/task_manager.ltx') {
  const body = JSON.stringify({
	path : basePath.value,
	fileName
  })
  const sectionTable = document.querySelector('table[name="section"]')
  const headerCells = sectionTable.rows[0].cells.length
  console.log(headerCells)
  fetch(`${baseUrl.value}/readAllLtxSections`, { method: 'POST', body })
	.then(response => response.text())
	.then(sections => {
	  sections
        .split('\r\n')
        .sort()
        .forEach(key => insertSection(sectionTable, key, headerCells))
	})
	.finally(() => {
      readSectionSetting(sectionTable, 1)
	})
}
function readSetting(table, index, row = table.rows[index]) {
  if (!row) return
  const body = JSON.stringify({
	path : basePath.value,
	fileName : row.cells[0].innerText,
	setting : row.cells[1].innerText
  })
  fetch(`${baseUrl.value}/readLtxSetting`, { method: 'POST', body })
    .then(response => response.text())
    .then(txt => {
	  addToCell(row.cells[2], txt)
	  readSetting(table, index + 1)
	})
}
function readSectionSetting(table, index, row = table.rows[index]) {
  if (!row) return
  const settings = Array.from(table.rows[0].cells).slice(1).map(cell => cell.innerText)
  const body = JSON.stringify({
	path : basePath.value,
	fileName : table.getAttribute('file'),
	texts : table.getAttribute('texts'),
	section : row.cells[0].innerText,
	setting : settings.join()
  })
  fetch(`${baseUrl.value}/readLtxSectionSetting`, { method: 'POST', body })
	.then(response => response.text())
	.then(txt => {
	  txt.split('\r\n').forEach((val, i) => addToCell(row.cells[1 + i], val))
	  readSectionSetting(table, index + 1)
	})
}
function addToCell(cell, txt) {
  if (txt.indexOf(',') == -1) return cell.innerText = txt
  cell.innerHTML = ''
  const select = cell.appendChild(document.createElement('select'))
  txt.split(',').forEach(val => addValues(select, val))
  return txt
}
function addValues(select, val)  {
  const option = select.appendChild(document.createElement('option'))
  option.innerText = val
}
function insertSetting(table, setting) {
  Object.keys(setting.settings)
    .forEach(key => {
	  const row = table.insertRow(-1)
      row.insertCell().innerText = setting.fullname
      row.insertCell(-1).innerText = key
	  const valueCell = row.insertCell(-1)
	  if (typeof(setting.settings[key]) == 'number')
	    valueCell.classList.add('nr')
    })
}
function insertSection(table, section, headerCells) {
  const row = table.insertRow(-1)
  row.insertCell(-1).innerText = section
  for (var i = 1; i < headerCells; i++)
    row.insertCell(-1)
}
setTimeout(() => {
  readAllLtxSections()
  baseUrl.value = document.URL.split('/').slice(0, -1).join('/')
  const settingsTable = document.querySelector('table[name="setting"]')
  Object.keys(quests).forEach(key => insertSetting(settingsTable, quests[key]))
  
  readSetting(settingsTable, 1)
  
})
</script>
</head>
<body>
<h1>Stalker</h1>
<div>
<label>Basepath: <input type="text" id="basePath" value="d:/games/modded/gamedata"></label>
<br/>
<label>BaseUrl: <input type="text" id="baseUrl" value=""></label>
</div>

<table name="setting">
<tr><th>Filename</th><th>Setting</th><th>Value</th></tr>
</table>

<table name="section" file="config/misc/task_manager.ltx" texts="config/text/eng/stable_task_manager.xml">
<tr><th>Quest</th><th>reward_item</th><th>description</th><th>reward_rank</th><th>reward_relation</th></tr>
</table>

</body>
</html>